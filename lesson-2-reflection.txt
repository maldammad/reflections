What happens when you initialize a repository? Why do you need to do it?
	I create an empty .git folder. It is needed to store in it the meta data when
	committing changes. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	It is an intermediate step between the working directory and the repository.
	It permits to gather files that have logical related changes before committing
	them at once.

How can you use the staging area to make sure you have one commit per logical
change?
	I can use "git diff --staged" to check differences before committing.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	When implementing for example a new version of the master branch.

How do the diagrams help you visualize the branch structure?
	It helps: - tracing up the commit.
			  - keeping track of which branches contain which commits.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	We get only one branch that can trace back all the commits in both the branches. 

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	Automatic merging:
		Pros: Easy to make
		Cons: Requires changes that are unrelated

	Manual merging:
		Pros: Bug prone when the changes are related
		Cons: Requires analysis and discussions withe the different contributors
